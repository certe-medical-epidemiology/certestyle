% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colourpicker.R
\name{colourpicker}
\alias{colourpicker}
\alias{as.character.colourpicker}
\alias{print.colourpicker}
\title{Colours from \R, Certe, Viridis and More}
\usage{
colourpicker(x, length = 1, opacity = 0, ...)

\method{as.character}{colourpicker}(x, ...)

\method{print}{colourpicker}(x, ...)
}
\arguments{
\item{x}{colour or colour palette name. Certe colours will be used from the \link{certe.colours} object. Input can be:
\itemize{
\item \code{"certe"}
\item \code{"certe0"} to \code{"certe6"} (higher numbers give lighter colours)
\item \code{"certeblauw"}, \code{"certegroen"}, \code{"certeroze"}, \code{"certegeel"}, \code{"certelila"}, or \code{"certezachtlila"} (or any of these followed by a 0 to 6)
\item \code{"certe_rsi"} or \code{"certe_rsi2"} for certeroze/certegeel/certegroen (will \strong{always} return length 3)
\item One of the colourblind-safe \code{viridisLite} palettes:
\itemize{
\item \code{"viridis"}
\item \code{"magma"}
\item \code{"inferno"}
\item \code{"plasma"}
\item \code{"cividis"}
\item \code{"rocket"}
\item \code{"mako"}
\item \code{"turbo"}
}
\item One of the built-in palettes in \R (currently \R 3.6.3):
\itemize{
\item \code{"topo"}
\item \code{"heatmap"}
\item \code{"rainbow"}
\item \code{"terrain"}
\item \code{"greyscale"}
\item \code{"grayscale"}
}
\item One of the 657 built-in \code{\link[=colours]{colours()}} in \R, such as \code{"ivory"}, \code{"khaki4"}, \code{"navy"}, \code{"thistle1"}, \code{"tomato3"}
}}

\item{length}{size of the vector to be returned}

\item{opacity}{amount of opacity (0 = solid, 1 = transparent)}

\item{...}{not used at the moment}
}
\value{
\link{character} vector in HTML format (i.e., \code{"#AABBCC"}) with new class \code{colourpicker}
}
\description{
Colours from \R, Certe, viridis and more. The output prints in the console with the actual colours.
}
\details{
Certe colours will be chosen as divergent as possible if the required output length is not too high. For example:
\itemize{
\item \code{x = "certe"} tries to only return the \code{"certe"} colours (\code{"certeblauw"}, \code{"certegroen"}, ...), the \code{"certe3"} colours (\code{"certeblauw3"}, \code{"certegroen3"}, ...) and the \code{"certe5"} colours (\code{"certeblauw5"}, \code{"certegroen5"}, ...)
\item \code{x = "certe2"} tries to only return the regular \code{"certe2"} colours (\code{"certeblauw2"}, \code{"certegroen2"}, ...), the \code{"certe4"} colours (\code{"certeblauw4"}, \code{"certegroen4"}, ...) and the \code{"certe6"} colours (\code{"certeblauw6"}, \code{"certegroen6"}, ...)
\item \code{x = "certe3"} tries to only return the \code{"certe3"} colours (\code{"certeblauw3"}, \code{"certegroen3"}, ...) and the \code{"certe5"} colours (\code{"certeblauw5"}, \code{"certegroen5"}, ...)
}
}
\examples{
colourpicker("certegroen")
colourpicker("certe", 5)
colourpicker(c("certeblauw", "red", "tan1", "#ffa", "FFAA00"))

par(mar = c(0.5, 2.5, 1.5, 0)) # set plot margins for below plots

# Certe colours
barplot(12:1,
        col = colourpicker("certe", 12),
        main = "'certe': uses 'certe' + 'certe3'")
barplot(12:1,
        col = colourpicker("certe2", 12),
        main = "'certe2': uses 'certe2' + 'certe4'")
barplot(12:1,
        col = colourpicker("certe3", 12),
        main = "'certe3': uses 'certe3' + 'certe5'")

# all colourblind-safe colour palettes from the famous viridisLite package
barplot(1:7,
        col = colourpicker("viridis", 7))
barplot(1:7,
        col = colourpicker("magma", 7))
}
